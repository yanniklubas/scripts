#!/usr/bin/env bash

set -euo pipefail

log_error() {
	local msg="$1"

	if [ -z "$TMUX" ]; then
		printf "%s\n" "$msg" >&2
	else
		tmux display-message -d 5000 "$msg"
	fi

}

is_executable_installed() {
	local cmd="$1"
	if command -v "$cmd" >/dev/null; then
		return 0
	fi
	return 1
}

select_directory_from_fzf() {
	local root="$1"
	local directories=("$root" "$root/dev" "$HOME/.dotfiles")
	if is_executable_installed "fd"; then
		fd --min-depth 1 --max-depth 1 --type directory . "${directories[@]}" | fzf --exit-0
	elif is_executable_installed "find"; then
		find "${directories[@]}" -mindepth 1 -maxdepth 1 -type d | fzf --exit-0
	else
		log_error "[ERROR:tmux-sessionizer]: neither \`fd\` nor \`find\` are executable"
		return 1
	fi
}

switch_to() {
	if [ -z "$TMUX" ]; then
		tmux attach-session -t "$1"
	else
		tmux switch-client -t "$1"
	fi
}

main() {
	local selected=""
	local workspace
	workspace=$(tmux showenv -g WORKSPACE | cut -d "=" -f2 || echo "$PERSONAL_WORKSPACE")
	if [[ $# -eq 1 ]]; then
		# Use the provided argument as the selected directory
		selected=$1
	elif [[ $# -eq 0 ]]; then
		# Use fzf to select a directory
		selected=$(select_directory_from_fzf "$workspace")
		echo "$selected"
	fi

	# Exit the script if no directory is selected
	if [[ -z "$selected" ]]; then
		exit 0
	fi

	session_name=$(echo "$selected" | tr ".-:" "___")
	if ! tmux has-session -t="$session_name" 2>/dev/null; then
		tmux new-session -ds "$session_name" -c "$selected"
	fi

	switch_to "$session_name"
}

main "$@"
